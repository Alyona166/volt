// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞
let isAdminAuthenticated = false;

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    checkAdminAuth();
});

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
async function checkAdminAuth() {
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
    try {
        const response = await fetch('php/admin_auth.php?action=check_auth');
        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
        
        if (!data.logged_in) {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
            showAdminAuthModal();
        } else {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å');
            isAdminAuthenticated = true;
            initAdminPanel();
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏');
        showAdminAuthModal();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function showAdminAuthModal() {
    console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    const modal = document.getElementById('adminAuthModal');
    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', modal);
    if (modal) {
        modal.style.display = 'flex';
        console.log('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫–∞–∑–∞–Ω–æ');
    } else {
        console.error('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
    }
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function closeAdminAuthModal() {
    document.getElementById('adminAuthModal').style.display = 'none';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
document.getElementById('adminAuthForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const password = document.getElementById('adminPassword').value;
    
    try {
        const response = await fetch('php/admin_auth.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `action=login&password=${encodeURIComponent(password)}`
        });
        
        const data = await response.json();
        
        if (data.success) {
            isAdminAuthenticated = true;
            closeAdminAuthModal();
            initAdminPanel();
        } else {
            alert(data.message || '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        alert('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function initAdminPanel() {
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    const navLinks = document.querySelectorAll('.nav__link[data-tab]');
    const tabContents = document.querySelectorAll('.admin-tab-content');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            navLinks.forEach(l => l.classList.remove('nav__link--active'));
            this.classList.add('nav__link--active');
            const tab = this.dataset.tab;
            tabContents.forEach(tc => tc.style.display = 'none');
            document.getElementById('tab-' + tab).style.display = '';
            if (tab !== 'queries') loadTable(tab);
            if (tab === 'queries') loadQueries();
        });
    });

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—é loadTable –¥–ª—è users/services/orders
    function loadTable(tab) {
        fetch(`php/admin.php?action=list&table=${tab}`)
            .then(res => res.json())
            .then(data => {
                if (data.error) {
                    document.getElementById('tab-' + tab).innerHTML = '<div style="color:#b00;padding:2rem;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>';
                    return;
                }
                if (tab === 'users' || tab === 'services' || tab === 'orders') {
                    renderCrudTable(tab, data.data || []);
                } else {
                    // —Å—Ç–∞—Ä—ã–π –≤—ã–≤–æ–¥ –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫ (–µ—Å–ª–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è)
                    const rows = (data.data || []).map(row =>
                        '<tr>' + Object.values(row).map(v => `<td>${v}</td>`).join('') + '</tr>'
                    ).join('');
                    const headers = data.data && data.data[0] ? Object.keys(data.data[0]).map(h => `<th>${h}</th>`).join('') : '';
                    document.getElementById('tab-' + tab).innerHTML = `
                        <div class="cabinet__card">
                            <table class="cabinet__table">
                                <thead><tr>${headers}</tr></thead>
                                <tbody>${rows}</tbody>
                            </table>
                        </div>
                    `;
                }
            });
    }

    // –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞—é renderCrudTable –¥–ª—è orders
    function renderCrudTable(tab, data) {
        const isUsers = tab === 'users';
        const isServices = tab === 'services';
        const isOrders = tab === 'orders';
        const headers = data[0] ? Object.keys(data[0]) : [];
        let html = `<div style="margin-bottom:1.2rem;display:flex;gap:1rem;">
            <button class="btn" id="admin-add-btn">–î–æ–±–∞–≤–∏—Ç—å</button>
        </div>`;
        html += `<div class="cabinet__card"><table class="cabinet__table"><thead><tr>${headers.map(h=>`<th>${h}</th>`).join('')}<th></th></tr></thead><tbody>`;
        html += data.map(row =>
            `<tr>${headers.map(h=>`<td>${row[h]}</td>`).join('')}
                <td>
                    <button class="btn btn--small admin-edit-btn" data-id="${row.id}" data-tab="${tab}">‚úèÔ∏è</button>
                    <button class="btn btn--small admin-del-btn" data-id="${row.id}" data-tab="${tab}">üóëÔ∏è</button>
                </td>
            </tr>`
        ).join('');
        html += '</tbody></table></div>';
        document.getElementById('tab-' + tab).innerHTML = html;

        // –î–æ–±–∞–≤–∏—Ç—å
        document.getElementById('admin-add-btn').onclick = () => openCrudModal(tab, null, tab);
        // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        document.querySelectorAll('.admin-edit-btn').forEach(btn => {
            btn.onclick = () => {
                const row = data.find(r => r.id == btn.dataset.id);
                const btnTab = btn.dataset.tab;
                openCrudModal(btnTab, row, btnTab);
            };
        });
        // –£–¥–∞–ª–∏—Ç—å
        document.querySelectorAll('.admin-del-btn').forEach(btn => {
            btn.onclick = () => {
                const btnTab = btn.dataset.tab;
                if (confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å?')) {
                    console.log('CRUD table (delete):', btnTab);
                    fetch('php/admin.php', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ action: 'delete', table: btnTab, data: { id: btn.dataset.id } })
                    })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            loadTable(btnTab);
                        } else {
                            let errorMsg = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏';
                            if (data.error === 'Unauthorized') {
                                errorMsg = '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + (data.details || '–°–µ—Å—Å–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                            } else if (data.error === 'db_error') {
                                errorMsg = '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ' + data.message;
                                if (data.details) errorMsg += '\n\n–î–µ—Ç–∞–ª–∏: ' + data.details;
                                if (data.sql_state) errorMsg += '\nSQL State: ' + data.sql_state;
                                if (data.debug_info) {
                                    console.log('Debug info:', data.debug_info);
                                    errorMsg += '\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—ã–≤–µ–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å';
                                }
                            } else if (data.error === 'unknown_table') {
                                errorMsg = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: ' + (data.details || '');
                            }
                            alert(errorMsg);
                            console.error('CRUD Error:', data);
                        }
                    })
                    .catch(error => {
                        console.error('Network error:', error);
                        alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: ' + error.message);
                    });
                }
            };
        });
    }

    function openCrudModal(tabArg, row, forceTab) {
        const tab = forceTab || tabArg;
        console.log('[DEBUG] openCrudModal, tab =', tab);
        if (!tab || (tab !== 'users' && tab !== 'services' && tab !== 'orders')) {
            alert('–û—à–∏–±–∫–∞: tab –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω! (' + tab + ')');
            return;
        }
        const isUsers = tab === 'users';
        const isServices = tab === 'services';
        const isOrders = tab === 'orders';
        let formHtml = '<form id="crud-form">';
        if (isUsers) {
            formHtml += `<div class="form__group"><label>–ò–º—è</label><input name="name" required value="${row?.name||''}"></div>`;
            formHtml += `<div class="form__group"><label>Email</label><input name="email" required value="${row?.email||''}"></div>`;
            formHtml += `<div class="form__group"><label>–¢–µ–ª–µ—Ñ–æ–Ω</label><input name="phone" required value="${row?.phone||''}"></div>`;
            if (!row) formHtml += `<div class="form__group"><label>–ü–∞—Ä–æ–ª—å</label><input name="password" type="password" required></div>`;
        }
        if (isServices) {
            formHtml += `<div class="form__group"><label>–ù–∞–∑–≤–∞–Ω–∏–µ</label><input name="name" required value="${row?.name||''}"></div>`;
            formHtml += `<div class="form__group"><label>–¶–µ–Ω–∞</label><input name="price" type="number" min="0" required value="${row?.price||''}"></div>`;
        }
        if (isOrders) {
            formHtml += `<div class="form__group"><label>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label><input name="user_id" type="number" required value="${row?.user_id||''}"></div>`;
            formHtml += `<div class="form__group"><label>ID —É—Å–ª—É–≥–∏</label><input name="service_id" type="number" required value="${row?.service_id||''}"></div>`;
            formHtml += `<div class="form__group"><label>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</label><input name="device" required value="${row?.device||''}"></div>`;
            formHtml += `<div class="form__group"><label>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</label><input name="problem_description" value="${row?.problem_description||''}"></div>`;
            formHtml += `<div class="form__group"><label>–°—Ç–∞—Ç—É—Å</label><select name="status">
                <option value="–ù–æ–≤—ã–π" ${row?.status==='–ù–æ–≤—ã–π'?'selected':''}>–ù–æ–≤—ã–π</option>
                <option value="–í –ø—Ä–æ—Ü–µ—Å—Å–µ" ${row?.status==='–í –ø—Ä–æ—Ü–µ—Å—Å–µ'?'selected':''}>–í –ø—Ä–æ—Ü–µ—Å—Å–µ</option>
                <option value="–ó–∞–≤–µ—Ä—à–µ–Ω–æ" ${row?.status==='–ó–∞–≤–µ—Ä—à–µ–Ω–æ'?'selected':''}>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
                <option value="–û—Ç–º–µ–Ω–µ–Ω–æ" ${row?.status==='–û—Ç–º–µ–Ω–µ–Ω–æ'?'selected':''}>–û—Ç–º–µ–Ω–µ–Ω–æ</option>
            </select></div>`;
            formHtml += `<div class="form__group"><label>–°—Ç–æ–∏–º–æ—Å—Ç—å</label><input name="total_cost" type="number" step="0.01" value="${row?.total_cost||''}"></div>`;
        }
        formHtml += '<button class="btn form__submit" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button></form>';
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'flex';
        modal.innerHTML = `<div class="modal__overlay"></div><div class="modal__content"><button class="modal__close" id="crud-close">√ó</button><h2 class="modal__title">${row ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'} ${isUsers ? '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' : isServices ? '—É—Å–ª—É–≥—É' : '–∑–∞—è–≤–∫—É'}</h2>${formHtml}</div>`;
        document.getElementById('admin-modal-root').appendChild(modal);
        document.getElementById('crud-close').onclick = ()=>modal.remove();
        modal.querySelector('.modal__overlay').onclick = ()=>modal.remove();
        modal.querySelector('#crud-form').onsubmit = function(e) {
            e.preventDefault();
            const formData = Object.fromEntries(new FormData(this));
            if (row) formData.id = row.id;
            console.log('CRUD table (save):', tab);
            if (!tab || (tab !== 'users' && tab !== 'services' && tab !== 'orders')) {
                alert('–û—à–∏–±–∫–∞: tab –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ! (' + tab + ')');
                return;
            }
            console.log('CRUD data:', formData);
            fetch('php/admin.php', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    action: row ? 'edit' : 'add',
                    table: tab,
                    data: formData
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    modal.remove();
                    loadTable(tab);
                } else {
                    let errorMsg = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏';
                    if (data.error === 'Unauthorized') {
                        errorMsg = '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + (data.details || '–°–µ—Å—Å–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                    } else if (data.error === 'db_error') {
                        errorMsg = '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ' + data.message;
                        if (data.details) errorMsg += '\n\n–î–µ—Ç–∞–ª–∏: ' + data.details;
                        if (data.sql_state) errorMsg += '\nSQL State: ' + data.sql_state;
                        if (data.debug_info) {
                            console.log('Debug info:', data.debug_info);
                            errorMsg += '\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—ã–≤–µ–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å';
                        }
                    } else if (data.error === 'unknown_table') {
                        errorMsg = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: ' + (data.details || '');
                    }
                    alert(errorMsg);
                    console.error('CRUD Error:', data);
                }
            })
            .catch(error => {
                console.error('Network error:', error);
                alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: ' + error.message);
            });
        };
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    loadTable('users');

    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
    function loadQueries() {
        document.getElementById('tab-queries').innerHTML = `
            <div class="queries-section">
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ 10 –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:</p>
                <div class="queries-grid">
                    <div class="query-card">
                        <h3>1. –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ä–µ–º–æ–Ω—Ç–µ</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ —Ä–µ–º–æ–Ω—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞</p>
                        <a href="php/queries.php?query=1&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>2. –ó–∞–∫–∞–∑—ã —Ç–µ—Ö–Ω–∏–∫–∞</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–∏–∫–æ–º</p>
                        <a href="php/queries.php?query=2&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>3. –ò—Å—Ç–µ–∫—à–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –≥–∞—Ä–∞–Ω—Ç–∏—è –∏—Å—Ç–µ–∫–ª–∞</p>
                        <a href="php/queries.php?query=3&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>4. –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—ã</p>
                        <a href="php/queries.php?query=4&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>5. –†–µ–º–æ–Ω—Ç—ã —Ç–µ—Ö–Ω–∏–∫–∞</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–∏–∫–æ–º</p>
                        <a href="php/queries.php?query=5&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>6. –ó–∞–∫–∞–∑—ã –ø–æ –ø–µ—Ä–∏–æ–¥—É</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</p>
                        <a href="php/queries.php?query=6&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>7. –ù–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞</p>
                        <a href="php/queries.php?query=7&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>8. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —Ç–∏–ø—É</p>
                        <a href="php/queries.php?query=8&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>9. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç–∞—Ç—É—Å—É</p>
                        <a href="php/queries.php?query=9&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                    <div class="query-card">
                        <h3>10. –ó–∞–∫–∞–∑—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è</h3>
                        <p>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è</p>
                        <a href="php/queries.php?query=10&execute=1" target="_blank">–í—ã–ø–æ–ª–Ω–∏—Ç—å</a>
                    </div>
                </div>
            </div>
        `;
    }
} 